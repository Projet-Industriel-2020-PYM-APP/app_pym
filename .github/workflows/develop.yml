on:
  push:
    branches:
      - develop

name: Test, Build and Release APK and AAB for Develop
jobs:
  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Setup Java 8
        uses: actions/setup-java@master
        with:
          java-version: '8.x'
      - name: Flutter action
        uses: subosito/flutter-action@master
        with:
          channel: 'stable'
      - name: Upgrade flutter to stable latest
        run: |
          flutter channel stable
          flutter upgrade
          flutter --version
      - run: flutter pub get
      - run: sudo apt update
      - name: Install LCOV
        run: sudo apt install -y lcov
      - name: run test coverage
        run: |
          flutter test --coverage
          lcov -r coverage/lcov.info $(cat ./.lcovignore) -o coverage/lcov.info
          genhtml -o coverage coverage/lcov.info
      - name: Archive Coverage
        uses: actions/upload-artifact@master
        with:
          name: coverage
          path: coverage
      - name: Install LFS
        run: |
          sudo apt update
          sudo apt install -y git-lfs
          git lfs install
      - name: Deploy coverage
        uses: JamesIves/github-pages-deploy-action@master
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BASE_BRANCH: develop
          BRANCH: gh-pages
          FOLDER: coverage
  integration-tests:
    name: Integration tests
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@master
      - name: Setup Java 8
        uses: actions/setup-java@master
        with:
          java-version: '8.x'
      - name: Flutter action
        uses: subosito/flutter-action@master
        with:
          channel: 'stable'
      - name: Upgrade flutter to stable latest
        run: |
          flutter channel stable
          flutter upgrade
          flutter --version
      - run: echo ${{ secrets.RELEASE_KEYSTORE_BASE64 }} | base64 -d > android/app/keystore.jks
      - run: echo ${{ secrets.GOOGLE_SERVICES_BASE64 }} | base64 -d > android/app/google-services.json
      - run: echo ${{ secrets.GOOGLE_SERVICES_INFO_BASE64 }} | base64 -d > ios/Runner/GoogleService-Info.plist
      - run: echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
      - run: echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
      - run: echo "keyAlias=${{ secrets.ALIAS }}" >> android/key.properties
      - run: echo "storeFile=keystore.jks" >> android/key.properties
      - name: run tests
        timeout-minutes: 30
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          target: google_apis
          profile: 'pixel'
          script: /Users/runner/Library/Android/sdk/tools/bin/avdmanager list && sleep 20 && flutter doctor -v && flutter pub get && sh test_integration.sh
      - name: upload screenshot
        uses: actions/upload-artifact@master
        with:
          name: screenshots
          path: test_driver/screenshots
  apk-build:
    name: Build APK
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Setup Java 8
        uses: actions/setup-java@master
        with:
          java-version: '8.x'
      - name: Flutter action
        uses: subosito/flutter-action@master
        with:
          channel: 'stable'
      - name: Upgrade flutter to stable latest
        run: |
          flutter channel stable
          flutter upgrade
          flutter --version
      - run: echo ${{ secrets.RELEASE_KEYSTORE_BASE64 }} | base64 -d > android/app/keystore.jks
      - run: echo ${{ secrets.GOOGLE_SERVICES_BASE64 }} | base64 -d > android/app/google-services.json
      - run: echo ${{ secrets.GOOGLE_SERVICES_INFO_BASE64 }} | base64 -d > ios/Runner/GoogleService-Info.plist
      - run: echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
      - run: echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
      - run: echo "keyAlias=${{ secrets.ALIAS }}" >> android/key.properties
      - run: echo "storeFile=keystore.jks" >> android/key.properties
      - run: flutter pub get
      - run: flutter build apk --release --split-per-abi
      - name: Archive APK
        uses: actions/upload-artifact@master
        with:
          name: release-apks
          path: build/app/outputs/apk/release
  aab-build:
    name: Build AAB
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Setup Java 8
        uses: actions/setup-java@master
        with:
          java-version: '8.x'
      - name: Flutter action
        uses: subosito/flutter-action@master
        with:
          channel: 'stable'
      - name: Upgrade flutter to stable latest
        run: |
          flutter channel stable
          flutter upgrade
          flutter --version
      - run: echo ${{ secrets.RELEASE_KEYSTORE_BASE64 }} | base64 -d > android/app/keystore.jks
      - run: echo ${{ secrets.GOOGLE_SERVICES_BASE64 }} | base64 -d > android/app/google-services.json
      - run: echo ${{ secrets.GOOGLE_SERVICES_INFO_BASE64 }} | base64 -d > ios/Runner/GoogleService-Info.plist
      - run: echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
      - run: echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
      - run: echo "keyAlias=${{ secrets.ALIAS }}" >> android/key.properties
      - run: echo "storeFile=keystore.jks" >> android/key.properties
      - run: flutter pub get
      - run: flutter build appbundle --release
      - name: Archive AAB
        uses: actions/upload-artifact@master
        with:
          name: release-aab
          path: build/app/outputs/bundle/release
  web-build:
    name: Build and Deploy Web
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Setup Java 12
        uses: actions/setup-java@master
        with:
          java-version: '12.x'
      - name: Flutter action
        uses: subosito/flutter-action@master
        with:
          channel: 'beta'
      - name: Upgrade flutter to beta latest
        run: |
          flutter channel beta
          flutter upgrade
          flutter --version
      - run: flutter pub get
      - run: flutter config --enable-web
      - run: flutter build web --release
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
